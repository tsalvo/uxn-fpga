#pragma once
#include "uintN_t.h"  // uintN_t types for any N

// Screen Blending Device Test

#define ROM_SIZE 508

uint8_t read_rom_byte(uint16_t read_address)
{
	static uint8_t uxn_rom[ROM_SIZE] = {
		0xA0, 0xF0, 0x7F, 0x80,
		0x08, 0x37, 0xA0, 0xF0,
		0xD6, 0x80, 0x0A, 0x37,
		0xA0, 0xF0, 0xB2, 0x80,
		0x0C, 0x37, 0xA0, 0x01,
		0x00, 0x80, 0x22, 0x37,
		0xA0, 0x01, 0x0C, 0x80,
		0x24, 0x37, 0x80, 0x02,
		0x60, 0x00, 0xD8, 0xA0,
		0x00, 0x80, 0x80, 0x28,
		0x37, 0xA0, 0x00, 0x00,
		0x80, 0x2A, 0x37, 0x80,
		0x03, 0x60, 0x00, 0xC7,
		0xA0, 0x10, 0x00, 0x80,
		0x00, 0x07, 0x80, 0x03,
		0x1C, 0x80, 0x50, 0x3F,
		0xA0, 0x00, 0x08, 0x38,
		0x80, 0x28, 0x37, 0x80,
		0x00, 0x07, 0x80, 0x02,
		0x1F, 0x80, 0x50, 0x3F,
		0xA0, 0x00, 0x08, 0x38,
		0x80, 0x2A, 0x37, 0x06,
		0x80, 0x80, 0x1D, 0x80,
		0x0F, 0x1C, 0x60, 0x00,
		0xB7, 0x01, 0x8A, 0x20,
		0xFF, 0xD1, 0x22, 0xA0,
		0x10, 0x00, 0x80, 0x00,
		0x07, 0x80, 0x03, 0x1C,
		0x80, 0x50, 0x3F, 0xA0,
		0x00, 0x88, 0x38, 0x80,
		0x28, 0x37, 0x80, 0x00,
		0x07, 0x80, 0x02, 0x1F,
		0x80, 0x50, 0x3F, 0xA0,
		0x00, 0x08, 0x38, 0x80,
		0x2A, 0x37, 0x06, 0x80,
		0xC0, 0x1D, 0x80, 0x0F,
		0x1C, 0x60, 0x00, 0x84,
		0x01, 0x8A, 0x20, 0xFF,
		0xD1, 0x22, 0xA0, 0x10,
		0x00, 0x80, 0x00, 0x07,
		0x80, 0x03, 0x1C, 0x80,
		0x50, 0x3F, 0xA0, 0x00,
		0x08, 0x38, 0x80, 0x28,
		0x37, 0x80, 0x00, 0x07,
		0x80, 0x02, 0x1F, 0x80,
		0x50, 0x3F, 0xA0, 0x00,
		0x88, 0x38, 0x80, 0x2A,
		0x37, 0x06, 0x80, 0x80,
		0x1D, 0x60, 0x00, 0x54,
		0x01, 0x8A, 0x20, 0xFF,
		0xD4, 0x22, 0xA0, 0x10,
		0x00, 0x80, 0x00, 0x07,
		0x80, 0x03, 0x1C, 0x80,
		0x50, 0x3F, 0xA0, 0x00,
		0x88, 0x38, 0x80, 0x28,
		0x37, 0x80, 0x00, 0x07,
		0x80, 0x02, 0x1F, 0x80,
		0x50, 0x3F, 0xA0, 0x00,
		0x88, 0x38, 0x80, 0x2A,
		0x37, 0x06, 0x80, 0xC0,
		0x1D, 0x60, 0x00, 0x24,
		0x01, 0x8A, 0x20, 0xFF,
		0xD4, 0x22, 0x00, 0x80,
		0x0F, 0x13, 0x80, 0xF2,
		0x80, 0x26, 0x17, 0xA0,
		0x02, 0x61, 0x80, 0x2C,
		0x37, 0xA0, 0x22, 0x00,
		0x80, 0x00, 0x80, 0x2F,
		0x17, 0x01, 0x8A, 0x20,
		0xFF, 0xF6, 0x22, 0x6C,
		0x80, 0x01, 0x80, 0x26,
		0x17, 0xA0, 0x02, 0x69,
		0x80, 0x2C, 0x37, 0x06,
		0x80, 0x2F, 0x17, 0x06,
		0x80, 0x10, 0x1D, 0x80,
		0x2F, 0x17, 0x80, 0x2A,
		0xB6, 0xA0, 0x00, 0x08,
		0x38, 0x05, 0x37, 0x06,
		0x80, 0x20, 0x1D, 0x80,
		0x2F, 0x17, 0x06, 0x80,
		0x30, 0x1D, 0x80, 0x2F,
		0x17, 0x80, 0x2A, 0xB6,
		0xA0, 0x00, 0x0C, 0x38,
		0x05, 0x37, 0x80, 0x00,
		0x04, 0x80, 0x30, 0x1F,
		0xA0, 0x02, 0x79, 0x38,
		0x80, 0x2C, 0x37, 0x80,
		0x09, 0x80, 0x2F, 0x17,
		0x6C, 0x03, 0x06, 0x0C,
		0x18, 0x30, 0x60, 0xC0,
		0x81, 0x07, 0x1F, 0x3C,
		0x70, 0x60, 0xE3, 0xC7,
		0xC7, 0x00, 0x00, 0x03,
		0x0F, 0x1F, 0x1F, 0x3F,
		0x3F, 0x00, 0x7C, 0x82,
		0x82, 0x82, 0x82, 0x82,
		0x7C, 0x00, 0x30, 0x10,
		0x10, 0x10, 0x10, 0x10,
		0x10, 0x00, 0x7C, 0x82,
		0x02, 0x7C, 0x80, 0x80,
		0xFE, 0x00, 0x7C, 0x82,
		0x02, 0x1C, 0x02, 0x82,
		0x7C, 0x00, 0x0C, 0x14,
		0x24, 0x44, 0x84, 0xFE,
		0x04, 0x00, 0xFE, 0x80,
		0x80, 0x7C, 0x02, 0x82,
		0x7C, 0x00, 0x7C, 0x82,
		0x80, 0xFC, 0x82, 0x82,
		0x7C, 0x00, 0x7C, 0x82,
		0x02, 0x1E, 0x02, 0x02,
		0x02, 0x00, 0x7C, 0x82,
		0x82, 0x7C, 0x82, 0x82,
		0x7C, 0x00, 0x7C, 0x82,
		0x82, 0x7E, 0x02, 0x82,
		0x7C, 0x00, 0x7C, 0x82,
		0x02, 0x7E, 0x82, 0x82,
		0x7E, 0x00, 0xFC, 0x82,
		0x82, 0xFC, 0x82, 0x82,
		0xFC, 0x00, 0x7C, 0x82,
		0x80, 0x80, 0x80, 0x82,
		0x7C, 0x00, 0xFC, 0x82,
		0x82, 0x82, 0x82, 0x82,
		0xFC, 0x00, 0x7C, 0x82,
		0x80, 0xF0, 0x80, 0x82,
		0x7C, 0x00, 0x7C, 0x82,
		0x80, 0xF0, 0x80, 0x80,
		0x80, 0x00, 0x00, 0x00,
	};
  
  static uint32_t rdaddr;
  rdaddr = (uint32_t)(read_address);
  
  uint8_t rdata = uxn_rom_RAM_SP_RF_1(
	  rdaddr,	// read address
	  0, 		// write value
	  0			// write enable
  );
  
  return rdata;
}
